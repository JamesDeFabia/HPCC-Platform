<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="CASE">
  <title>CASE</title>

  <para><emphasis role="bold">CASE<indexterm>
      <primary>CASE</primary>
    </indexterm><indexterm>
      <primary>CASE function</primary>
    </indexterm>(</emphasis><emphasis>expression, caseval =&gt; value,
  </emphasis><emphasis role="bold">[</emphasis><emphasis>… , caseval =&gt;
  value </emphasis><emphasis role="bold">]</emphasis><emphasis>
  </emphasis><emphasis role="bold">[,</emphasis><emphasis> elsevalue
  </emphasis><emphasis role="bold">] )</emphasis></para>

  <para><informaltable colsep="1" frame="all" rowsep="1">
      <tgroup cols="2">
        <colspec colwidth="79.75pt"/>

        <colspec/>

        <tbody>
          <row>
            <entry><emphasis>expression</emphasis></entry>

            <entry>Uma expressão que resulta em um único valor.</entry>
          </row>

          <row>
            <entry><emphasis>caseval</emphasis></entry>

            <entry>Um valor a ser comparado com o resultado da
            expressão.</entry>
          </row>

          <row>
            <entry>=&gt;</entry>

            <entry>O operador "resulta em" - válido somente em CHOOSESETS,
            CASE e MAP.</entry>
          </row>

          <row>
            <entry><emphasis>value</emphasis></entry>

            <entry>O valor a ser retornado. Isso pode ser qualquer expressão
            ou ação.</entry>
          </row>

          <row>
            <entry><emphasis>elsevalue</emphasis></entry>

            <entry>Opcional. O valor a ser retornado quando o resultado da
            expressão não corresponde a nenhum dos valores
            <emphasis>caseval</emphasis> . Pode ser omitido se todos os
            valores de retorno forem ações (o padrão então seria nenhuma
            ação), ou se todos os valores de retorno forem conjuntos de
            registro (o padrão então seria um conjunto de registros
            vazio).</entry>
          </row>

          <row>
            <entry>Return:</entry>

            <entry>CASE retorna um único valor, um conjunto de valores, um
            conjunto de registros ou uma ação.</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable></para>

  <para>A função <emphasis role="bold">CASE </emphasis>avalia a
  <emphasis>expressão</emphasis> e retorna o <emphasis>valor</emphasis> cujo
  <emphasis>caseval </emphasis>corresponde ao resultado da <emphasis>expressão
  </emphasis>. Se não houver correspondência, ela retorna o
  <emphasis>elsevalue</emphasis>.</para>

  <para>Deverá haver a quantidade de parâmetros de <emphasis>caseval
  </emphasis>=&gt; <emphasis>value</emphasis> necessária para especificar
  todos os valores esperados da <emphasis>expressão</emphasis> (deve haver
  pelo menos um). Todos os parâmetros do <emphasis>valor </emphasis> de
  retorno devem ser do mesmo tipo.</para>

  <para>Exemplo:</para>

  <programlisting lang="ECL_Runnable">//simple example
MyExp := 1+2; 
MyChoice := CASE(MyExp, 1 =&gt; 9, 2 =&gt; 8, 3 =&gt; 7, 4 =&gt; 6, 5);
  // returns a value of 7 for the value of MyExp=3
OUTPUT(MyChoice);

//example using a DATASET
personRecord := RECORD
  STRING UID;
  STRING first_name;
  STRING last_name;
  STRING address;
  STRING city;
  STRING state;
  STRING zip;
END;
person := DATASET([{'923','James','Jones','123 Elm Street','Hollywood','FL','33022'},
                   {'924','Sally','Jones','22 Main Street','Tampa','FL','33604'},
                   {'925','Jose','Gomez','111 Biscaya Lane','Miami','FL','33101'},
                   {'926','Adam','Wesson','77 Sunset Blvd','Boston','MA','02108'},
                   {'927','Evelyn','Murray','740 SW 10th Street','Boston ','MA','02116'},
                   {'928','Joe','Yung','7511 Simson Avenue','Chicago','IL','60131'}], personRecord);

MyRecSet := CASE(MyExp, 1 =&gt; Person(state = 'FL'),
    2 =&gt; Person(state = 'GA'),
    3 =&gt; Person(state = 'MA'),
    4 =&gt; Person(state = 'IL'),
    person);
  // returns set of MA Persons for the value of MyExp=3
  // set MyExp to a number &gt; 4 to get all records
OUTPUT(MyRecSet);
</programlisting>

  <para>Ver também: <link linkend="MAP">MAP</link>, <link
  linkend="CHOOSE">CHOOSE</link>, <link linkend="IF">IF</link>, <link
  linkend="REJECTED">REJECTED</link>, <link
  linkend="WHICH">WHICH</link></para>
</sect1>
