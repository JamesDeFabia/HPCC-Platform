<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="getElapsedMs">
  <title>getElapsedMs</title>

  <para><emphasis>result</emphasis> <emphasis role="bold"> :=
  STD.System.Log.getElapsedMs<indexterm>
      <primary>STD.System.Log.getElapsedMs</primary>
    </indexterm> <indexterm>
      <primary>System.Log.getElapsedMs</primary>
    </indexterm> <indexterm>
      <primary>Log.getElapsedMs</primary>
    </indexterm> <indexterm>
      <primary>getElapsedMs</primary>
    </indexterm></emphasis><emphasis></emphasis><emphasis role="bold">
  ();</emphasis></para>

  <informaltable colsep="1" frame="all" rowsep="1">
    <tgroup cols="2">
      <colspec colwidth="80.50pt" />

      <colspec />

      <tbody>
        <row>
          <entry>Return:</entry>

          <entry>getElapsedMs returns returns the elapsed time in
          milliseconds.</entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>The <emphasis role="bold">getElapsedMs </emphasis>function returns the
  current elapsed query time (in ms) in Roxie. </para>

  <para>This is the elapsed time when STD.System.Log.getElapsedMs() is called.
  Because ECL is a declarative language, code is not necessarily executed in
  sequence. You have to be careful when trying to get the elapsed time for a
  particular point in your code. You can look at the Workunit graphs to see
  the exact point at which the activity executes. </para>

  <para><emphasis role="bold">For use in Roxie only</emphasis>. An error is
  returned if you try to run on Thor or hThor.</para>

  <para>Example:</para>

  <programlisting format="linespecific" lang="ECL_Runnable">IMPORT STD;
STD.System.Debug.Sleep (1054);      // pause processing for 1054 milliseconds.
OUTPUT(STD.System.Log.getElapsedMs(), NAMED('Elapsed')); //returns total time elapsed
</programlisting>
</sect1>
